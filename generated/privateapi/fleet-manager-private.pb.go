// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: privateapi/fleet-manager-private.proto

package private

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CentralVersions struct {
	Central              string   `protobuf:"bytes,1,opt,name=central,proto3" json:"central,omitempty"`
	CentralOperator      string   `protobuf:"bytes,2,opt,name=centralOperator,proto3" json:"centralOperator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CentralVersions) Reset()         { *m = CentralVersions{} }
func (m *CentralVersions) String() string { return proto.CompactTextString(m) }
func (*CentralVersions) ProtoMessage()    {}
func (*CentralVersions) Descriptor() ([]byte, []int) {
	return fileDescriptor_46941109379d73f3, []int{0}
}
func (m *CentralVersions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CentralVersions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CentralVersions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CentralVersions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CentralVersions.Merge(m, src)
}
func (m *CentralVersions) XXX_Size() int {
	return m.Size()
}
func (m *CentralVersions) XXX_DiscardUnknown() {
	xxx_messageInfo_CentralVersions.DiscardUnknown(m)
}

var xxx_messageInfo_CentralVersions proto.InternalMessageInfo

func (m *CentralVersions) GetCentral() string {
	if m != nil {
		return m.Central
	}
	return ""
}

func (m *CentralVersions) GetCentralOperator() string {
	if m != nil {
		return m.CentralOperator
	}
	return ""
}

func (m *CentralVersions) MessageClone() proto.Message {
	return m.Clone()
}
func (m *CentralVersions) Clone() *CentralVersions {
	if m == nil {
		return nil
	}
	cloned := new(CentralVersions)
	*cloned = *m

	return cloned
}

type Condition struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Status               string   `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	LastTransitionTime   string   `protobuf:"bytes,5,opt,name=lastTransitionTime,proto3" json:"lastTransitionTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Condition) Reset()         { *m = Condition{} }
func (m *Condition) String() string { return proto.CompactTextString(m) }
func (*Condition) ProtoMessage()    {}
func (*Condition) Descriptor() ([]byte, []int) {
	return fileDescriptor_46941109379d73f3, []int{1}
}
func (m *Condition) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Condition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Condition.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Condition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Condition.Merge(m, src)
}
func (m *Condition) XXX_Size() int {
	return m.Size()
}
func (m *Condition) XXX_DiscardUnknown() {
	xxx_messageInfo_Condition.DiscardUnknown(m)
}

var xxx_messageInfo_Condition proto.InternalMessageInfo

func (m *Condition) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Condition) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *Condition) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Condition) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Condition) GetLastTransitionTime() string {
	if m != nil {
		return m.LastTransitionTime
	}
	return ""
}

func (m *Condition) MessageClone() proto.Message {
	return m.Clone()
}
func (m *Condition) Clone() *Condition {
	if m == nil {
		return nil
	}
	cloned := new(Condition)
	*cloned = *m

	return cloned
}

type CentralRoute struct {
	Domain               string   `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Router               string   `protobuf:"bytes,2,opt,name=router,proto3" json:"router,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CentralRoute) Reset()         { *m = CentralRoute{} }
func (m *CentralRoute) String() string { return proto.CompactTextString(m) }
func (*CentralRoute) ProtoMessage()    {}
func (*CentralRoute) Descriptor() ([]byte, []int) {
	return fileDescriptor_46941109379d73f3, []int{2}
}
func (m *CentralRoute) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CentralRoute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CentralRoute.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CentralRoute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CentralRoute.Merge(m, src)
}
func (m *CentralRoute) XXX_Size() int {
	return m.Size()
}
func (m *CentralRoute) XXX_DiscardUnknown() {
	xxx_messageInfo_CentralRoute.DiscardUnknown(m)
}

var xxx_messageInfo_CentralRoute proto.InternalMessageInfo

func (m *CentralRoute) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *CentralRoute) GetRouter() string {
	if m != nil {
		return m.Router
	}
	return ""
}

func (m *CentralRoute) MessageClone() proto.Message {
	return m.Clone()
}
func (m *CentralRoute) Clone() *CentralRoute {
	if m == nil {
		return nil
	}
	cloned := new(CentralRoute)
	*cloned = *m

	return cloned
}

type CentralStatus struct {
	Conditions           []*Condition     `protobuf:"bytes,1,rep,name=conditions,proto3" json:"conditions,omitempty"`
	Versions             *CentralVersions `protobuf:"bytes,2,opt,name=versions,proto3" json:"versions,omitempty"`
	Routes               []*CentralRoute  `protobuf:"bytes,3,rep,name=routes,proto3" json:"routes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CentralStatus) Reset()         { *m = CentralStatus{} }
func (m *CentralStatus) String() string { return proto.CompactTextString(m) }
func (*CentralStatus) ProtoMessage()    {}
func (*CentralStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_46941109379d73f3, []int{3}
}
func (m *CentralStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CentralStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CentralStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CentralStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CentralStatus.Merge(m, src)
}
func (m *CentralStatus) XXX_Size() int {
	return m.Size()
}
func (m *CentralStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_CentralStatus.DiscardUnknown(m)
}

var xxx_messageInfo_CentralStatus proto.InternalMessageInfo

func (m *CentralStatus) GetConditions() []*Condition {
	if m != nil {
		return m.Conditions
	}
	return nil
}

func (m *CentralStatus) GetVersions() *CentralVersions {
	if m != nil {
		return m.Versions
	}
	return nil
}

func (m *CentralStatus) GetRoutes() []*CentralRoute {
	if m != nil {
		return m.Routes
	}
	return nil
}

func (m *CentralStatus) MessageClone() proto.Message {
	return m.Clone()
}
func (m *CentralStatus) Clone() *CentralStatus {
	if m == nil {
		return nil
	}
	cloned := new(CentralStatus)
	*cloned = *m

	if m.Conditions != nil {
		cloned.Conditions = make([]*Condition, len(m.Conditions))
		for idx, v := range m.Conditions {
			cloned.Conditions[idx] = v.Clone()
		}
	}
	cloned.Versions = m.Versions.Clone()
	if m.Routes != nil {
		cloned.Routes = make([]*CentralRoute, len(m.Routes))
		for idx, v := range m.Routes {
			cloned.Routes[idx] = v.Clone()
		}
	}
	return cloned
}

type UpdateCentralStatusRequest struct {
	AgentCluster         string                    `protobuf:"bytes,1,opt,name=agent_cluster,json=agentCluster,proto3" json:"agent_cluster,omitempty"`
	Updates              map[string]*CentralStatus `protobuf:"bytes,2,rep,name=updates,proto3" json:"updates,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *UpdateCentralStatusRequest) Reset()         { *m = UpdateCentralStatusRequest{} }
func (m *UpdateCentralStatusRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateCentralStatusRequest) ProtoMessage()    {}
func (*UpdateCentralStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_46941109379d73f3, []int{4}
}
func (m *UpdateCentralStatusRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateCentralStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateCentralStatusRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdateCentralStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCentralStatusRequest.Merge(m, src)
}
func (m *UpdateCentralStatusRequest) XXX_Size() int {
	return m.Size()
}
func (m *UpdateCentralStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCentralStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCentralStatusRequest proto.InternalMessageInfo

func (m *UpdateCentralStatusRequest) GetAgentCluster() string {
	if m != nil {
		return m.AgentCluster
	}
	return ""
}

func (m *UpdateCentralStatusRequest) GetUpdates() map[string]*CentralStatus {
	if m != nil {
		return m.Updates
	}
	return nil
}

func (m *UpdateCentralStatusRequest) MessageClone() proto.Message {
	return m.Clone()
}
func (m *UpdateCentralStatusRequest) Clone() *UpdateCentralStatusRequest {
	if m == nil {
		return nil
	}
	cloned := new(UpdateCentralStatusRequest)
	*cloned = *m

	if m.Updates != nil {
		cloned.Updates = make(map[string]*CentralStatus, len(m.Updates))
		for k, v := range m.Updates {
			cloned.Updates[k] = v.Clone()
		}
	}
	return cloned
}

type UpdateCentralStatusResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateCentralStatusResponse) Reset()         { *m = UpdateCentralStatusResponse{} }
func (m *UpdateCentralStatusResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateCentralStatusResponse) ProtoMessage()    {}
func (*UpdateCentralStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_46941109379d73f3, []int{5}
}
func (m *UpdateCentralStatusResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateCentralStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateCentralStatusResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdateCentralStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCentralStatusResponse.Merge(m, src)
}
func (m *UpdateCentralStatusResponse) XXX_Size() int {
	return m.Size()
}
func (m *UpdateCentralStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCentralStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCentralStatusResponse proto.InternalMessageInfo

func (m *UpdateCentralStatusResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateCentralStatusResponse) MessageClone() proto.Message {
	return m.Clone()
}
func (m *UpdateCentralStatusResponse) Clone() *UpdateCentralStatusResponse {
	if m == nil {
		return nil
	}
	cloned := new(UpdateCentralStatusResponse)
	*cloned = *m

	return cloned
}

type ManagedCentralMetadataAnnotations struct {
	MasId                string   `protobuf:"bytes,1,opt,name=mas_id,json=masId,proto3" json:"mas_id,omitempty"`
	MasPlacementId       string   `protobuf:"bytes,2,opt,name=mas_placement_id,json=masPlacementId,proto3" json:"mas_placement_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ManagedCentralMetadataAnnotations) Reset()         { *m = ManagedCentralMetadataAnnotations{} }
func (m *ManagedCentralMetadataAnnotations) String() string { return proto.CompactTextString(m) }
func (*ManagedCentralMetadataAnnotations) ProtoMessage()    {}
func (*ManagedCentralMetadataAnnotations) Descriptor() ([]byte, []int) {
	return fileDescriptor_46941109379d73f3, []int{6}
}
func (m *ManagedCentralMetadataAnnotations) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ManagedCentralMetadataAnnotations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ManagedCentralMetadataAnnotations.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ManagedCentralMetadataAnnotations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManagedCentralMetadataAnnotations.Merge(m, src)
}
func (m *ManagedCentralMetadataAnnotations) XXX_Size() int {
	return m.Size()
}
func (m *ManagedCentralMetadataAnnotations) XXX_DiscardUnknown() {
	xxx_messageInfo_ManagedCentralMetadataAnnotations.DiscardUnknown(m)
}

var xxx_messageInfo_ManagedCentralMetadataAnnotations proto.InternalMessageInfo

func (m *ManagedCentralMetadataAnnotations) GetMasId() string {
	if m != nil {
		return m.MasId
	}
	return ""
}

func (m *ManagedCentralMetadataAnnotations) GetMasPlacementId() string {
	if m != nil {
		return m.MasPlacementId
	}
	return ""
}

func (m *ManagedCentralMetadataAnnotations) MessageClone() proto.Message {
	return m.Clone()
}
func (m *ManagedCentralMetadataAnnotations) Clone() *ManagedCentralMetadataAnnotations {
	if m == nil {
		return nil
	}
	cloned := new(ManagedCentralMetadataAnnotations)
	*cloned = *m

	return cloned
}

type ManagedCentralMetadata struct {
	Name                 string                             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace            string                             `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Annotations          *ManagedCentralMetadataAnnotations `protobuf:"bytes,3,opt,name=annotations,proto3" json:"annotations,omitempty"`
	DeletionTimestamp    string                             `protobuf:"bytes,4,opt,name=deletion_timestamp,json=deletionTimestamp,proto3" json:"deletion_timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *ManagedCentralMetadata) Reset()         { *m = ManagedCentralMetadata{} }
func (m *ManagedCentralMetadata) String() string { return proto.CompactTextString(m) }
func (*ManagedCentralMetadata) ProtoMessage()    {}
func (*ManagedCentralMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_46941109379d73f3, []int{7}
}
func (m *ManagedCentralMetadata) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ManagedCentralMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ManagedCentralMetadata.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ManagedCentralMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManagedCentralMetadata.Merge(m, src)
}
func (m *ManagedCentralMetadata) XXX_Size() int {
	return m.Size()
}
func (m *ManagedCentralMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_ManagedCentralMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_ManagedCentralMetadata proto.InternalMessageInfo

func (m *ManagedCentralMetadata) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ManagedCentralMetadata) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *ManagedCentralMetadata) GetAnnotations() *ManagedCentralMetadataAnnotations {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *ManagedCentralMetadata) GetDeletionTimestamp() string {
	if m != nil {
		return m.DeletionTimestamp
	}
	return ""
}

func (m *ManagedCentralMetadata) MessageClone() proto.Message {
	return m.Clone()
}
func (m *ManagedCentralMetadata) Clone() *ManagedCentralMetadata {
	if m == nil {
		return nil
	}
	cloned := new(ManagedCentralMetadata)
	*cloned = *m

	cloned.Annotations = m.Annotations.Clone()
	return cloned
}

type ManagedCentralSpecAuth struct {
	ClientSecret         string   `protobuf:"bytes,1,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	ClientId             string   `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	OwnerUserId          string   `protobuf:"bytes,3,opt,name=owner_user_id,json=ownerUserId,proto3" json:"owner_user_id,omitempty"`
	OwnerOrgId           string   `protobuf:"bytes,4,opt,name=owner_org_id,json=ownerOrgId,proto3" json:"owner_org_id,omitempty"`
	Issuer               string   `protobuf:"bytes,5,opt,name=issuer,proto3" json:"issuer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ManagedCentralSpecAuth) Reset()         { *m = ManagedCentralSpecAuth{} }
func (m *ManagedCentralSpecAuth) String() string { return proto.CompactTextString(m) }
func (*ManagedCentralSpecAuth) ProtoMessage()    {}
func (*ManagedCentralSpecAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_46941109379d73f3, []int{8}
}
func (m *ManagedCentralSpecAuth) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ManagedCentralSpecAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ManagedCentralSpecAuth.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ManagedCentralSpecAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManagedCentralSpecAuth.Merge(m, src)
}
func (m *ManagedCentralSpecAuth) XXX_Size() int {
	return m.Size()
}
func (m *ManagedCentralSpecAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_ManagedCentralSpecAuth.DiscardUnknown(m)
}

var xxx_messageInfo_ManagedCentralSpecAuth proto.InternalMessageInfo

func (m *ManagedCentralSpecAuth) GetClientSecret() string {
	if m != nil {
		return m.ClientSecret
	}
	return ""
}

func (m *ManagedCentralSpecAuth) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *ManagedCentralSpecAuth) GetOwnerUserId() string {
	if m != nil {
		return m.OwnerUserId
	}
	return ""
}

func (m *ManagedCentralSpecAuth) GetOwnerOrgId() string {
	if m != nil {
		return m.OwnerOrgId
	}
	return ""
}

func (m *ManagedCentralSpecAuth) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

func (m *ManagedCentralSpecAuth) MessageClone() proto.Message {
	return m.Clone()
}
func (m *ManagedCentralSpecAuth) Clone() *ManagedCentralSpecAuth {
	if m == nil {
		return nil
	}
	cloned := new(ManagedCentralSpecAuth)
	*cloned = *m

	return cloned
}

type ManagedCentralSpecUiEndpointTLS struct {
	Cert                 string   `protobuf:"bytes,1,opt,name=cert,proto3" json:"cert,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ManagedCentralSpecUiEndpointTLS) Reset()         { *m = ManagedCentralSpecUiEndpointTLS{} }
func (m *ManagedCentralSpecUiEndpointTLS) String() string { return proto.CompactTextString(m) }
func (*ManagedCentralSpecUiEndpointTLS) ProtoMessage()    {}
func (*ManagedCentralSpecUiEndpointTLS) Descriptor() ([]byte, []int) {
	return fileDescriptor_46941109379d73f3, []int{9}
}
func (m *ManagedCentralSpecUiEndpointTLS) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ManagedCentralSpecUiEndpointTLS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ManagedCentralSpecUiEndpointTLS.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ManagedCentralSpecUiEndpointTLS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManagedCentralSpecUiEndpointTLS.Merge(m, src)
}
func (m *ManagedCentralSpecUiEndpointTLS) XXX_Size() int {
	return m.Size()
}
func (m *ManagedCentralSpecUiEndpointTLS) XXX_DiscardUnknown() {
	xxx_messageInfo_ManagedCentralSpecUiEndpointTLS.DiscardUnknown(m)
}

var xxx_messageInfo_ManagedCentralSpecUiEndpointTLS proto.InternalMessageInfo

func (m *ManagedCentralSpecUiEndpointTLS) GetCert() string {
	if m != nil {
		return m.Cert
	}
	return ""
}

func (m *ManagedCentralSpecUiEndpointTLS) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ManagedCentralSpecUiEndpointTLS) MessageClone() proto.Message {
	return m.Clone()
}
func (m *ManagedCentralSpecUiEndpointTLS) Clone() *ManagedCentralSpecUiEndpointTLS {
	if m == nil {
		return nil
	}
	cloned := new(ManagedCentralSpecUiEndpointTLS)
	*cloned = *m

	return cloned
}

type ManagedCentralSpecUiEndpoint struct {
	Host                 string                           `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Tls                  *ManagedCentralSpecUiEndpointTLS `protobuf:"bytes,2,opt,name=tls,proto3" json:"tls,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *ManagedCentralSpecUiEndpoint) Reset()         { *m = ManagedCentralSpecUiEndpoint{} }
func (m *ManagedCentralSpecUiEndpoint) String() string { return proto.CompactTextString(m) }
func (*ManagedCentralSpecUiEndpoint) ProtoMessage()    {}
func (*ManagedCentralSpecUiEndpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_46941109379d73f3, []int{10}
}
func (m *ManagedCentralSpecUiEndpoint) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ManagedCentralSpecUiEndpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ManagedCentralSpecUiEndpoint.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ManagedCentralSpecUiEndpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManagedCentralSpecUiEndpoint.Merge(m, src)
}
func (m *ManagedCentralSpecUiEndpoint) XXX_Size() int {
	return m.Size()
}
func (m *ManagedCentralSpecUiEndpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_ManagedCentralSpecUiEndpoint.DiscardUnknown(m)
}

var xxx_messageInfo_ManagedCentralSpecUiEndpoint proto.InternalMessageInfo

func (m *ManagedCentralSpecUiEndpoint) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *ManagedCentralSpecUiEndpoint) GetTls() *ManagedCentralSpecUiEndpointTLS {
	if m != nil {
		return m.Tls
	}
	return nil
}

func (m *ManagedCentralSpecUiEndpoint) MessageClone() proto.Message {
	return m.Clone()
}
func (m *ManagedCentralSpecUiEndpoint) Clone() *ManagedCentralSpecUiEndpoint {
	if m == nil {
		return nil
	}
	cloned := new(ManagedCentralSpecUiEndpoint)
	*cloned = *m

	cloned.Tls = m.Tls.Clone()
	return cloned
}

type ManagedCentralSpecDataEndpoint struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ManagedCentralSpecDataEndpoint) Reset()         { *m = ManagedCentralSpecDataEndpoint{} }
func (m *ManagedCentralSpecDataEndpoint) String() string { return proto.CompactTextString(m) }
func (*ManagedCentralSpecDataEndpoint) ProtoMessage()    {}
func (*ManagedCentralSpecDataEndpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_46941109379d73f3, []int{11}
}
func (m *ManagedCentralSpecDataEndpoint) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ManagedCentralSpecDataEndpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ManagedCentralSpecDataEndpoint.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ManagedCentralSpecDataEndpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManagedCentralSpecDataEndpoint.Merge(m, src)
}
func (m *ManagedCentralSpecDataEndpoint) XXX_Size() int {
	return m.Size()
}
func (m *ManagedCentralSpecDataEndpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_ManagedCentralSpecDataEndpoint.DiscardUnknown(m)
}

var xxx_messageInfo_ManagedCentralSpecDataEndpoint proto.InternalMessageInfo

func (m *ManagedCentralSpecDataEndpoint) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *ManagedCentralSpecDataEndpoint) MessageClone() proto.Message {
	return m.Clone()
}
func (m *ManagedCentralSpecDataEndpoint) Clone() *ManagedCentralSpecDataEndpoint {
	if m == nil {
		return nil
	}
	cloned := new(ManagedCentralSpecDataEndpoint)
	*cloned = *m

	return cloned
}

type ResourceList struct {
	Cpu                  string   `protobuf:"bytes,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory               string   `protobuf:"bytes,2,opt,name=memory,proto3" json:"memory,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceList) Reset()         { *m = ResourceList{} }
func (m *ResourceList) String() string { return proto.CompactTextString(m) }
func (*ResourceList) ProtoMessage()    {}
func (*ResourceList) Descriptor() ([]byte, []int) {
	return fileDescriptor_46941109379d73f3, []int{12}
}
func (m *ResourceList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ResourceList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ResourceList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ResourceList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceList.Merge(m, src)
}
func (m *ResourceList) XXX_Size() int {
	return m.Size()
}
func (m *ResourceList) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceList.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceList proto.InternalMessageInfo

func (m *ResourceList) GetCpu() string {
	if m != nil {
		return m.Cpu
	}
	return ""
}

func (m *ResourceList) GetMemory() string {
	if m != nil {
		return m.Memory
	}
	return ""
}

func (m *ResourceList) MessageClone() proto.Message {
	return m.Clone()
}
func (m *ResourceList) Clone() *ResourceList {
	if m == nil {
		return nil
	}
	cloned := new(ResourceList)
	*cloned = *m

	return cloned
}

type ResourceRequirements struct {
	Requests             *ResourceList `protobuf:"bytes,1,opt,name=requests,proto3" json:"requests,omitempty"`
	Limits               *ResourceList `protobuf:"bytes,2,opt,name=limits,proto3" json:"limits,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ResourceRequirements) Reset()         { *m = ResourceRequirements{} }
func (m *ResourceRequirements) String() string { return proto.CompactTextString(m) }
func (*ResourceRequirements) ProtoMessage()    {}
func (*ResourceRequirements) Descriptor() ([]byte, []int) {
	return fileDescriptor_46941109379d73f3, []int{13}
}
func (m *ResourceRequirements) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ResourceRequirements) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ResourceRequirements.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ResourceRequirements) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceRequirements.Merge(m, src)
}
func (m *ResourceRequirements) XXX_Size() int {
	return m.Size()
}
func (m *ResourceRequirements) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceRequirements.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceRequirements proto.InternalMessageInfo

func (m *ResourceRequirements) GetRequests() *ResourceList {
	if m != nil {
		return m.Requests
	}
	return nil
}

func (m *ResourceRequirements) GetLimits() *ResourceList {
	if m != nil {
		return m.Limits
	}
	return nil
}

func (m *ResourceRequirements) MessageClone() proto.Message {
	return m.Clone()
}
func (m *ResourceRequirements) Clone() *ResourceRequirements {
	if m == nil {
		return nil
	}
	cloned := new(ResourceRequirements)
	*cloned = *m

	cloned.Requests = m.Requests.Clone()
	cloned.Limits = m.Limits.Clone()
	return cloned
}

type ManagedCentralSpecCentral struct {
	Resources            *ResourceRequirements `protobuf:"bytes,1,opt,name=resources,proto3" json:"resources,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ManagedCentralSpecCentral) Reset()         { *m = ManagedCentralSpecCentral{} }
func (m *ManagedCentralSpecCentral) String() string { return proto.CompactTextString(m) }
func (*ManagedCentralSpecCentral) ProtoMessage()    {}
func (*ManagedCentralSpecCentral) Descriptor() ([]byte, []int) {
	return fileDescriptor_46941109379d73f3, []int{14}
}
func (m *ManagedCentralSpecCentral) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ManagedCentralSpecCentral) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ManagedCentralSpecCentral.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ManagedCentralSpecCentral) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManagedCentralSpecCentral.Merge(m, src)
}
func (m *ManagedCentralSpecCentral) XXX_Size() int {
	return m.Size()
}
func (m *ManagedCentralSpecCentral) XXX_DiscardUnknown() {
	xxx_messageInfo_ManagedCentralSpecCentral.DiscardUnknown(m)
}

var xxx_messageInfo_ManagedCentralSpecCentral proto.InternalMessageInfo

func (m *ManagedCentralSpecCentral) GetResources() *ResourceRequirements {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *ManagedCentralSpecCentral) MessageClone() proto.Message {
	return m.Clone()
}
func (m *ManagedCentralSpecCentral) Clone() *ManagedCentralSpecCentral {
	if m == nil {
		return nil
	}
	cloned := new(ManagedCentralSpecCentral)
	*cloned = *m

	cloned.Resources = m.Resources.Clone()
	return cloned
}

type ManagedCentralSpecScannerAnalyzerScaling struct {
	AutoScaling          string   `protobuf:"bytes,1,opt,name=auto_scaling,json=autoScaling,proto3" json:"auto_scaling,omitempty"`
	Replicas             int32    `protobuf:"varint,2,opt,name=replicas,proto3" json:"replicas,omitempty"`
	MinReplicas          int32    `protobuf:"varint,3,opt,name=minReplicas,proto3" json:"minReplicas,omitempty"`
	MaxReplicas          int32    `protobuf:"varint,4,opt,name=maxReplicas,proto3" json:"maxReplicas,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ManagedCentralSpecScannerAnalyzerScaling) Reset() {
	*m = ManagedCentralSpecScannerAnalyzerScaling{}
}
func (m *ManagedCentralSpecScannerAnalyzerScaling) String() string { return proto.CompactTextString(m) }
func (*ManagedCentralSpecScannerAnalyzerScaling) ProtoMessage()    {}
func (*ManagedCentralSpecScannerAnalyzerScaling) Descriptor() ([]byte, []int) {
	return fileDescriptor_46941109379d73f3, []int{15}
}
func (m *ManagedCentralSpecScannerAnalyzerScaling) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ManagedCentralSpecScannerAnalyzerScaling) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ManagedCentralSpecScannerAnalyzerScaling.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ManagedCentralSpecScannerAnalyzerScaling) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManagedCentralSpecScannerAnalyzerScaling.Merge(m, src)
}
func (m *ManagedCentralSpecScannerAnalyzerScaling) XXX_Size() int {
	return m.Size()
}
func (m *ManagedCentralSpecScannerAnalyzerScaling) XXX_DiscardUnknown() {
	xxx_messageInfo_ManagedCentralSpecScannerAnalyzerScaling.DiscardUnknown(m)
}

var xxx_messageInfo_ManagedCentralSpecScannerAnalyzerScaling proto.InternalMessageInfo

func (m *ManagedCentralSpecScannerAnalyzerScaling) GetAutoScaling() string {
	if m != nil {
		return m.AutoScaling
	}
	return ""
}

func (m *ManagedCentralSpecScannerAnalyzerScaling) GetReplicas() int32 {
	if m != nil {
		return m.Replicas
	}
	return 0
}

func (m *ManagedCentralSpecScannerAnalyzerScaling) GetMinReplicas() int32 {
	if m != nil {
		return m.MinReplicas
	}
	return 0
}

func (m *ManagedCentralSpecScannerAnalyzerScaling) GetMaxReplicas() int32 {
	if m != nil {
		return m.MaxReplicas
	}
	return 0
}

func (m *ManagedCentralSpecScannerAnalyzerScaling) MessageClone() proto.Message {
	return m.Clone()
}
func (m *ManagedCentralSpecScannerAnalyzerScaling) Clone() *ManagedCentralSpecScannerAnalyzerScaling {
	if m == nil {
		return nil
	}
	cloned := new(ManagedCentralSpecScannerAnalyzerScaling)
	*cloned = *m

	return cloned
}

type ManagedCentralSpecScannerAnalyzer struct {
	Scaling              *ManagedCentralSpecScannerAnalyzerScaling `protobuf:"bytes,1,opt,name=scaling,proto3" json:"scaling,omitempty"`
	Resources            *ResourceRequirements                     `protobuf:"bytes,2,opt,name=resources,proto3" json:"resources,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *ManagedCentralSpecScannerAnalyzer) Reset()         { *m = ManagedCentralSpecScannerAnalyzer{} }
func (m *ManagedCentralSpecScannerAnalyzer) String() string { return proto.CompactTextString(m) }
func (*ManagedCentralSpecScannerAnalyzer) ProtoMessage()    {}
func (*ManagedCentralSpecScannerAnalyzer) Descriptor() ([]byte, []int) {
	return fileDescriptor_46941109379d73f3, []int{16}
}
func (m *ManagedCentralSpecScannerAnalyzer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ManagedCentralSpecScannerAnalyzer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ManagedCentralSpecScannerAnalyzer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ManagedCentralSpecScannerAnalyzer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManagedCentralSpecScannerAnalyzer.Merge(m, src)
}
func (m *ManagedCentralSpecScannerAnalyzer) XXX_Size() int {
	return m.Size()
}
func (m *ManagedCentralSpecScannerAnalyzer) XXX_DiscardUnknown() {
	xxx_messageInfo_ManagedCentralSpecScannerAnalyzer.DiscardUnknown(m)
}

var xxx_messageInfo_ManagedCentralSpecScannerAnalyzer proto.InternalMessageInfo

func (m *ManagedCentralSpecScannerAnalyzer) GetScaling() *ManagedCentralSpecScannerAnalyzerScaling {
	if m != nil {
		return m.Scaling
	}
	return nil
}

func (m *ManagedCentralSpecScannerAnalyzer) GetResources() *ResourceRequirements {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *ManagedCentralSpecScannerAnalyzer) MessageClone() proto.Message {
	return m.Clone()
}
func (m *ManagedCentralSpecScannerAnalyzer) Clone() *ManagedCentralSpecScannerAnalyzer {
	if m == nil {
		return nil
	}
	cloned := new(ManagedCentralSpecScannerAnalyzer)
	*cloned = *m

	cloned.Scaling = m.Scaling.Clone()
	cloned.Resources = m.Resources.Clone()
	return cloned
}

type ManagedCentralSpecScannerDb struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ManagedCentralSpecScannerDb) Reset()         { *m = ManagedCentralSpecScannerDb{} }
func (m *ManagedCentralSpecScannerDb) String() string { return proto.CompactTextString(m) }
func (*ManagedCentralSpecScannerDb) ProtoMessage()    {}
func (*ManagedCentralSpecScannerDb) Descriptor() ([]byte, []int) {
	return fileDescriptor_46941109379d73f3, []int{17}
}
func (m *ManagedCentralSpecScannerDb) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ManagedCentralSpecScannerDb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ManagedCentralSpecScannerDb.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ManagedCentralSpecScannerDb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManagedCentralSpecScannerDb.Merge(m, src)
}
func (m *ManagedCentralSpecScannerDb) XXX_Size() int {
	return m.Size()
}
func (m *ManagedCentralSpecScannerDb) XXX_DiscardUnknown() {
	xxx_messageInfo_ManagedCentralSpecScannerDb.DiscardUnknown(m)
}

var xxx_messageInfo_ManagedCentralSpecScannerDb proto.InternalMessageInfo

func (m *ManagedCentralSpecScannerDb) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *ManagedCentralSpecScannerDb) MessageClone() proto.Message {
	return m.Clone()
}
func (m *ManagedCentralSpecScannerDb) Clone() *ManagedCentralSpecScannerDb {
	if m == nil {
		return nil
	}
	cloned := new(ManagedCentralSpecScannerDb)
	*cloned = *m

	return cloned
}

type ManagedCentralSpecScanner struct {
	Analyzer             *ManagedCentralSpecScannerAnalyzer `protobuf:"bytes,1,opt,name=analyzer,proto3" json:"analyzer,omitempty"`
	Db                   *ManagedCentralSpecScannerDb       `protobuf:"bytes,2,opt,name=db,proto3" json:"db,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *ManagedCentralSpecScanner) Reset()         { *m = ManagedCentralSpecScanner{} }
func (m *ManagedCentralSpecScanner) String() string { return proto.CompactTextString(m) }
func (*ManagedCentralSpecScanner) ProtoMessage()    {}
func (*ManagedCentralSpecScanner) Descriptor() ([]byte, []int) {
	return fileDescriptor_46941109379d73f3, []int{18}
}
func (m *ManagedCentralSpecScanner) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ManagedCentralSpecScanner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ManagedCentralSpecScanner.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ManagedCentralSpecScanner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManagedCentralSpecScanner.Merge(m, src)
}
func (m *ManagedCentralSpecScanner) XXX_Size() int {
	return m.Size()
}
func (m *ManagedCentralSpecScanner) XXX_DiscardUnknown() {
	xxx_messageInfo_ManagedCentralSpecScanner.DiscardUnknown(m)
}

var xxx_messageInfo_ManagedCentralSpecScanner proto.InternalMessageInfo

func (m *ManagedCentralSpecScanner) GetAnalyzer() *ManagedCentralSpecScannerAnalyzer {
	if m != nil {
		return m.Analyzer
	}
	return nil
}

func (m *ManagedCentralSpecScanner) GetDb() *ManagedCentralSpecScannerDb {
	if m != nil {
		return m.Db
	}
	return nil
}

func (m *ManagedCentralSpecScanner) MessageClone() proto.Message {
	return m.Clone()
}
func (m *ManagedCentralSpecScanner) Clone() *ManagedCentralSpecScanner {
	if m == nil {
		return nil
	}
	cloned := new(ManagedCentralSpecScanner)
	*cloned = *m

	cloned.Analyzer = m.Analyzer.Clone()
	cloned.Db = m.Db.Clone()
	return cloned
}

type ManagedCentralSpec struct {
	Owners               []string                        `protobuf:"bytes,1,rep,name=owners,proto3" json:"owners,omitempty"`
	Auth                 *ManagedCentralSpecAuth         `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	UiEndpoint           *ManagedCentralSpecUiEndpoint   `protobuf:"bytes,3,opt,name=ui_endpoint,json=uiEndpoint,proto3" json:"ui_endpoint,omitempty"`
	DataEndpoint         *ManagedCentralSpecDataEndpoint `protobuf:"bytes,4,opt,name=data_endpoint,json=dataEndpoint,proto3" json:"data_endpoint,omitempty"`
	Versions             *CentralVersions                `protobuf:"bytes,5,opt,name=versions,proto3" json:"versions,omitempty"`
	Central              *ManagedCentralSpecCentral      `protobuf:"bytes,6,opt,name=central,proto3" json:"central,omitempty"`
	Scanner              *ManagedCentralSpecScanner      `protobuf:"bytes,7,opt,name=scanner,proto3" json:"scanner,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *ManagedCentralSpec) Reset()         { *m = ManagedCentralSpec{} }
func (m *ManagedCentralSpec) String() string { return proto.CompactTextString(m) }
func (*ManagedCentralSpec) ProtoMessage()    {}
func (*ManagedCentralSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_46941109379d73f3, []int{19}
}
func (m *ManagedCentralSpec) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ManagedCentralSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ManagedCentralSpec.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ManagedCentralSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManagedCentralSpec.Merge(m, src)
}
func (m *ManagedCentralSpec) XXX_Size() int {
	return m.Size()
}
func (m *ManagedCentralSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ManagedCentralSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ManagedCentralSpec proto.InternalMessageInfo

func (m *ManagedCentralSpec) GetOwners() []string {
	if m != nil {
		return m.Owners
	}
	return nil
}

func (m *ManagedCentralSpec) GetAuth() *ManagedCentralSpecAuth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *ManagedCentralSpec) GetUiEndpoint() *ManagedCentralSpecUiEndpoint {
	if m != nil {
		return m.UiEndpoint
	}
	return nil
}

func (m *ManagedCentralSpec) GetDataEndpoint() *ManagedCentralSpecDataEndpoint {
	if m != nil {
		return m.DataEndpoint
	}
	return nil
}

func (m *ManagedCentralSpec) GetVersions() *CentralVersions {
	if m != nil {
		return m.Versions
	}
	return nil
}

func (m *ManagedCentralSpec) GetCentral() *ManagedCentralSpecCentral {
	if m != nil {
		return m.Central
	}
	return nil
}

func (m *ManagedCentralSpec) GetScanner() *ManagedCentralSpecScanner {
	if m != nil {
		return m.Scanner
	}
	return nil
}

func (m *ManagedCentralSpec) MessageClone() proto.Message {
	return m.Clone()
}
func (m *ManagedCentralSpec) Clone() *ManagedCentralSpec {
	if m == nil {
		return nil
	}
	cloned := new(ManagedCentralSpec)
	*cloned = *m

	if m.Owners != nil {
		cloned.Owners = make([]string, len(m.Owners))
		copy(cloned.Owners, m.Owners)
	}
	cloned.Auth = m.Auth.Clone()
	cloned.UiEndpoint = m.UiEndpoint.Clone()
	cloned.DataEndpoint = m.DataEndpoint.Clone()
	cloned.Versions = m.Versions.Clone()
	cloned.Central = m.Central.Clone()
	cloned.Scanner = m.Scanner.Clone()
	return cloned
}

type ManagedCentral struct {
	Id                   string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Kind                 string                  `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata             *ManagedCentralMetadata `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec                 *ManagedCentralSpec     `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
	RequestStatus        string                  `protobuf:"bytes,5,opt,name=request_status,json=requestStatus,proto3" json:"request_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ManagedCentral) Reset()         { *m = ManagedCentral{} }
func (m *ManagedCentral) String() string { return proto.CompactTextString(m) }
func (*ManagedCentral) ProtoMessage()    {}
func (*ManagedCentral) Descriptor() ([]byte, []int) {
	return fileDescriptor_46941109379d73f3, []int{20}
}
func (m *ManagedCentral) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ManagedCentral) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ManagedCentral.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ManagedCentral) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManagedCentral.Merge(m, src)
}
func (m *ManagedCentral) XXX_Size() int {
	return m.Size()
}
func (m *ManagedCentral) XXX_DiscardUnknown() {
	xxx_messageInfo_ManagedCentral.DiscardUnknown(m)
}

var xxx_messageInfo_ManagedCentral proto.InternalMessageInfo

func (m *ManagedCentral) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ManagedCentral) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *ManagedCentral) GetMetadata() *ManagedCentralMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *ManagedCentral) GetSpec() *ManagedCentralSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *ManagedCentral) GetRequestStatus() string {
	if m != nil {
		return m.RequestStatus
	}
	return ""
}

func (m *ManagedCentral) MessageClone() proto.Message {
	return m.Clone()
}
func (m *ManagedCentral) Clone() *ManagedCentral {
	if m == nil {
		return nil
	}
	cloned := new(ManagedCentral)
	*cloned = *m

	cloned.Metadata = m.Metadata.Clone()
	cloned.Spec = m.Spec.Clone()
	return cloned
}

type GetCentralsRequest struct {
	AgentCluster         string   `protobuf:"bytes,1,opt,name=agent_cluster,json=agentCluster,proto3" json:"agent_cluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCentralsRequest) Reset()         { *m = GetCentralsRequest{} }
func (m *GetCentralsRequest) String() string { return proto.CompactTextString(m) }
func (*GetCentralsRequest) ProtoMessage()    {}
func (*GetCentralsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_46941109379d73f3, []int{21}
}
func (m *GetCentralsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetCentralsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetCentralsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetCentralsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCentralsRequest.Merge(m, src)
}
func (m *GetCentralsRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetCentralsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCentralsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCentralsRequest proto.InternalMessageInfo

func (m *GetCentralsRequest) GetAgentCluster() string {
	if m != nil {
		return m.AgentCluster
	}
	return ""
}

func (m *GetCentralsRequest) MessageClone() proto.Message {
	return m.Clone()
}
func (m *GetCentralsRequest) Clone() *GetCentralsRequest {
	if m == nil {
		return nil
	}
	cloned := new(GetCentralsRequest)
	*cloned = *m

	return cloned
}

type GetCentralsResponse struct {
	Centrals             []*ManagedCentral `protobuf:"bytes,1,rep,name=centrals,proto3" json:"centrals,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetCentralsResponse) Reset()         { *m = GetCentralsResponse{} }
func (m *GetCentralsResponse) String() string { return proto.CompactTextString(m) }
func (*GetCentralsResponse) ProtoMessage()    {}
func (*GetCentralsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_46941109379d73f3, []int{22}
}
func (m *GetCentralsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetCentralsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetCentralsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetCentralsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCentralsResponse.Merge(m, src)
}
func (m *GetCentralsResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetCentralsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCentralsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCentralsResponse proto.InternalMessageInfo

func (m *GetCentralsResponse) GetCentrals() []*ManagedCentral {
	if m != nil {
		return m.Centrals
	}
	return nil
}

func (m *GetCentralsResponse) MessageClone() proto.Message {
	return m.Clone()
}
func (m *GetCentralsResponse) Clone() *GetCentralsResponse {
	if m == nil {
		return nil
	}
	cloned := new(GetCentralsResponse)
	*cloned = *m

	if m.Centrals != nil {
		cloned.Centrals = make([]*ManagedCentral, len(m.Centrals))
		for idx, v := range m.Centrals {
			cloned.Centrals[idx] = v.Clone()
		}
	}
	return cloned
}

func init() {
	proto.RegisterType((*CentralVersions)(nil), "private.CentralVersions")
	proto.RegisterType((*Condition)(nil), "private.Condition")
	proto.RegisterType((*CentralRoute)(nil), "private.CentralRoute")
	proto.RegisterType((*CentralStatus)(nil), "private.CentralStatus")
	proto.RegisterType((*UpdateCentralStatusRequest)(nil), "private.UpdateCentralStatusRequest")
	proto.RegisterMapType((map[string]*CentralStatus)(nil), "private.UpdateCentralStatusRequest.UpdatesEntry")
	proto.RegisterType((*UpdateCentralStatusResponse)(nil), "private.UpdateCentralStatusResponse")
	proto.RegisterType((*ManagedCentralMetadataAnnotations)(nil), "private.ManagedCentralMetadataAnnotations")
	proto.RegisterType((*ManagedCentralMetadata)(nil), "private.ManagedCentralMetadata")
	proto.RegisterType((*ManagedCentralSpecAuth)(nil), "private.ManagedCentralSpecAuth")
	proto.RegisterType((*ManagedCentralSpecUiEndpointTLS)(nil), "private.ManagedCentralSpecUiEndpointTLS")
	proto.RegisterType((*ManagedCentralSpecUiEndpoint)(nil), "private.ManagedCentralSpecUiEndpoint")
	proto.RegisterType((*ManagedCentralSpecDataEndpoint)(nil), "private.ManagedCentralSpecDataEndpoint")
	proto.RegisterType((*ResourceList)(nil), "private.ResourceList")
	proto.RegisterType((*ResourceRequirements)(nil), "private.ResourceRequirements")
	proto.RegisterType((*ManagedCentralSpecCentral)(nil), "private.ManagedCentralSpecCentral")
	proto.RegisterType((*ManagedCentralSpecScannerAnalyzerScaling)(nil), "private.ManagedCentralSpecScannerAnalyzerScaling")
	proto.RegisterType((*ManagedCentralSpecScannerAnalyzer)(nil), "private.ManagedCentralSpecScannerAnalyzer")
	proto.RegisterType((*ManagedCentralSpecScannerDb)(nil), "private.ManagedCentralSpecScannerDb")
	proto.RegisterType((*ManagedCentralSpecScanner)(nil), "private.ManagedCentralSpecScanner")
	proto.RegisterType((*ManagedCentralSpec)(nil), "private.ManagedCentralSpec")
	proto.RegisterType((*ManagedCentral)(nil), "private.ManagedCentral")
	proto.RegisterType((*GetCentralsRequest)(nil), "private.GetCentralsRequest")
	proto.RegisterType((*GetCentralsResponse)(nil), "private.GetCentralsResponse")
}

func init() {
	proto.RegisterFile("privateapi/fleet-manager-private.proto", fileDescriptor_46941109379d73f3)
}

var fileDescriptor_46941109379d73f3 = []byte{
	// 1228 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x57, 0xef, 0x72, 0x14, 0x45,
	0x10, 0x67, 0xef, 0xf2, 0xb7, 0xef, 0x12, 0x70, 0x10, 0x3c, 0x12, 0x0c, 0x61, 0x01, 0x4d, 0x51,
	0x06, 0x24, 0x50, 0x25, 0x02, 0x65, 0x15, 0xf2, 0xaf, 0x82, 0xa1, 0xa0, 0xe6, 0x12, 0xcb, 0xf2,
	0xcb, 0xd5, 0xdc, 0xee, 0x78, 0x4c, 0xb1, 0x3b, 0xbb, 0xce, 0xcc, 0x22, 0xf1, 0x49, 0xe4, 0x0d,
	0xf4, 0x83, 0xdf, 0x7d, 0x01, 0x4b, 0xfd, 0xe6, 0x23, 0x28, 0xbe, 0x88, 0x35, 0xb3, 0x3d, 0x7b,
	0x7b, 0xdc, 0xe5, 0x12, 0x3e, 0xdd, 0x74, 0xcf, 0xaf, 0xff, 0x6e, 0x77, 0x4f, 0x1f, 0x7c, 0x94,
	0x2b, 0xf1, 0x92, 0x19, 0xce, 0x72, 0x71, 0xf5, 0xbb, 0x84, 0x73, 0xb3, 0x99, 0x32, 0xc9, 0x06,
	0x5c, 0x6d, 0xe2, 0xc5, 0x95, 0x5c, 0x65, 0x26, 0x23, 0xf3, 0x48, 0x86, 0x7b, 0x70, 0xfc, 0x1e,
	0x97, 0x46, 0xb1, 0xe4, 0x6b, 0xae, 0xb4, 0xc8, 0xa4, 0x26, 0x1d, 0x98, 0x8f, 0x4a, 0x56, 0x27,
	0x58, 0x0f, 0x36, 0x16, 0xa9, 0x27, 0xc9, 0x06, 0x1c, 0xc7, 0xe3, 0xd3, 0x9c, 0x2b, 0x66, 0x32,
	0xd5, 0x69, 0x38, 0xc4, 0xdb, 0xec, 0xf0, 0x75, 0x00, 0x8b, 0xf7, 0x32, 0x19, 0x0b, 0x23, 0x32,
	0x49, 0x08, 0xcc, 0x98, 0xfd, 0x9c, 0xa3, 0x3a, 0x77, 0x26, 0xa7, 0x61, 0x4e, 0x71, 0xa6, 0x33,
	0x89, 0x2a, 0x90, 0xb2, 0xd6, 0x53, 0xae, 0x35, 0x1b, 0xf0, 0x4e, 0xb3, 0xb4, 0x8e, 0xa4, 0x95,
	0xd0, 0x86, 0x99, 0x42, 0x77, 0x66, 0x4a, 0x89, 0x92, 0x22, 0x57, 0x80, 0x24, 0x4c, 0x9b, 0x5d,
	0xc5, 0xa4, 0x76, 0xf6, 0x76, 0x45, 0xca, 0x3b, 0xb3, 0x0e, 0x33, 0xe1, 0x26, 0xfc, 0x02, 0xda,
	0x18, 0x32, 0xcd, 0x0a, 0xe3, 0xf4, 0xc6, 0x59, 0xca, 0x84, 0x44, 0xff, 0x90, 0x72, 0x1e, 0x5a,
	0x80, 0xaa, 0x3c, 0x74, 0x54, 0xf8, 0x73, 0x00, 0x4b, 0xa8, 0xa0, 0x5b, 0x7a, 0xb0, 0x05, 0x10,
	0xf9, 0x60, 0x75, 0x27, 0x58, 0x6f, 0x6e, 0xb4, 0xb6, 0xc8, 0x15, 0x9f, 0xf1, 0x2a, 0x0f, 0xb4,
	0x86, 0x22, 0x37, 0x60, 0xe1, 0x25, 0x66, 0xdc, 0xe9, 0x6f, 0x6d, 0x75, 0x86, 0x12, 0xa3, 0x5f,
	0x84, 0x56, 0x48, 0xb2, 0x89, 0x3e, 0xe9, 0x4e, 0xd3, 0x59, 0x39, 0xf5, 0xb6, 0x8c, 0x0b, 0x09,
	0x5d, 0xd5, 0xe1, 0xbf, 0x01, 0xac, 0xec, 0xe5, 0x31, 0x33, 0x7c, 0xc4, 0x61, 0xca, 0xbf, 0x2f,
	0xb8, 0x36, 0xe4, 0x02, 0x2c, 0xb1, 0x01, 0x97, 0xa6, 0x17, 0x25, 0x85, 0xb6, 0x81, 0x96, 0x09,
	0x68, 0x3b, 0xe6, 0xbd, 0x92, 0x47, 0x1e, 0xc3, 0x7c, 0xe1, 0x54, 0x58, 0x3f, 0xad, 0xcd, 0x4f,
	0x2b, 0x9b, 0x07, 0xab, 0xc6, 0x2b, 0xfd, 0x40, 0x1a, 0xb5, 0x4f, 0xbd, 0x82, 0x15, 0x0a, 0xed,
	0xfa, 0x05, 0x39, 0x01, 0xcd, 0x17, 0x7c, 0x1f, 0xcd, 0xda, 0x23, 0xf9, 0x04, 0x66, 0x5f, 0xb2,
	0xa4, 0xe0, 0x98, 0x93, 0xd3, 0x6f, 0xc7, 0x87, 0x56, 0x4a, 0xd0, 0xad, 0xc6, 0xcd, 0x20, 0xfc,
	0x0c, 0x56, 0x27, 0xfa, 0xa1, 0xf3, 0x4c, 0x6a, 0x5e, 0xaf, 0xa7, 0x60, 0xa4, 0x9e, 0xc2, 0x18,
	0xce, 0x3f, 0x71, 0xcd, 0x11, 0xa3, 0xe4, 0x13, 0x6e, 0x58, 0xcc, 0x0c, 0xbb, 0x2b, 0x65, 0x66,
	0x58, 0xf9, 0x99, 0x4e, 0xc1, 0x5c, 0xca, 0x74, 0x4f, 0xc4, 0x28, 0x3d, 0x9b, 0x32, 0xbd, 0x1d,
	0x93, 0x0d, 0x38, 0x61, 0xd9, 0x79, 0xc2, 0x22, 0x9e, 0xda, 0x0c, 0x8a, 0x18, 0xab, 0x64, 0x39,
	0x65, 0xfa, 0x99, 0x67, 0x6f, 0xc7, 0xe1, 0x1f, 0x01, 0x9c, 0x9e, 0x6c, 0xc6, 0xb6, 0x85, 0x64,
	0x69, 0xd5, 0x16, 0xf6, 0x4c, 0xce, 0xc2, 0xa2, 0xfd, 0xd5, 0x39, 0x8b, 0x38, 0x6a, 0x1c, 0x32,
	0xc8, 0x0e, 0xb4, 0xd8, 0xd0, 0x39, 0xd7, 0x20, 0xad, 0xad, 0xcb, 0x55, 0x8e, 0x0e, 0x0d, 0x87,
	0xd6, 0xc5, 0xc9, 0x26, 0x90, 0x98, 0x27, 0xdc, 0x12, 0x3d, 0x23, 0x52, 0xae, 0x0d, 0x4b, 0x73,
	0x6c, 0xae, 0xf7, 0xfc, 0xcd, 0xae, 0xbf, 0x08, 0x7f, 0x1b, 0x8b, 0xa4, 0x9b, 0xf3, 0xe8, 0x6e,
	0x61, 0x9e, 0xdb, 0x42, 0x8a, 0x12, 0x61, 0xf3, 0xa0, 0x79, 0xa4, 0xb8, 0xf1, 0x85, 0x54, 0x32,
	0xbb, 0x8e, 0x47, 0x56, 0x61, 0x11, 0x41, 0x55, 0xb2, 0x16, 0x4a, 0xc6, 0x76, 0x4c, 0x42, 0x58,
	0xca, 0x7e, 0x90, 0x5c, 0xf5, 0x0a, 0xcd, 0x95, 0x05, 0x94, 0xcd, 0xdf, 0x72, 0xcc, 0x3d, 0xcd,
	0xd5, 0x76, 0x4c, 0xd6, 0xa1, 0x5d, 0x62, 0x32, 0x35, 0xb0, 0x90, 0xd2, 0x53, 0x70, 0xbc, 0xa7,
	0x6a, 0xb0, 0x1d, 0xdb, 0x96, 0x15, 0x5a, 0x17, 0x5c, 0x61, 0xfb, 0x23, 0x15, 0x3e, 0x82, 0x73,
	0xe3, 0x9e, 0xef, 0x89, 0x07, 0x32, 0xce, 0x33, 0x21, 0xcd, 0xee, 0x4e, 0xd7, 0x7e, 0x8c, 0x88,
	0x2b, 0xef, 0xb9, 0x3b, 0xfb, 0xf2, 0x6c, 0x54, 0xe5, 0x19, 0x4a, 0x38, 0x3b, 0x4d, 0x91, 0xd5,
	0xf2, 0x3c, 0xd3, 0x95, 0x16, 0x7b, 0x26, 0xb7, 0xa0, 0x69, 0x12, 0xdf, 0xe4, 0x1b, 0x07, 0x7c,
	0xac, 0x31, 0x87, 0xa8, 0x15, 0x0a, 0x6f, 0xc0, 0xda, 0x38, 0xee, 0x3e, 0x33, 0x6c, 0x9a, 0xc5,
	0xf0, 0x26, 0xb4, 0x29, 0xd7, 0x59, 0xa1, 0x22, 0xbe, 0x23, 0xb4, 0x8b, 0x23, 0xca, 0x0b, 0xdf,
	0x66, 0x51, 0x5e, 0xd8, 0x44, 0xa5, 0x3c, 0xcd, 0x94, 0x0f, 0x0e, 0xa9, 0xf0, 0x15, 0xbc, 0xef,
	0x25, 0x6d, 0x27, 0x0b, 0xe5, 0xca, 0x58, 0x93, 0x6b, 0xb0, 0xa0, 0xca, 0xce, 0xd6, 0x4e, 0x4d,
	0x7d, 0xf2, 0xd4, 0x4d, 0xd1, 0x0a, 0x66, 0x47, 0x55, 0x22, 0x52, 0x61, 0x7c, 0xe4, 0x07, 0x08,
	0x20, 0x28, 0xfc, 0x06, 0xce, 0x8c, 0x47, 0x8a, 0x47, 0x72, 0x1b, 0x16, 0x15, 0x0a, 0x79, 0xfb,
	0x1f, 0x8e, 0xa9, 0xab, 0x3b, 0x4c, 0x87, 0xf8, 0xf0, 0xd7, 0x00, 0x36, 0xc6, 0x55, 0x77, 0x23,
	0x26, 0x25, 0x57, 0x77, 0x25, 0x4b, 0xf6, 0x7f, 0xe4, 0xaa, 0x1b, 0xb1, 0x44, 0xc8, 0x01, 0x39,
	0x0f, 0x6d, 0x56, 0x98, 0xac, 0xa7, 0x4b, 0x1a, 0x73, 0xd6, 0xb2, 0x3c, 0x0f, 0x59, 0xb1, 0xb9,
	0xc8, 0x13, 0x11, 0xb1, 0x32, 0xb4, 0x59, 0x5a, 0xd1, 0x64, 0x1d, 0x5a, 0xa9, 0x90, 0xd4, 0x5f,
	0x37, 0xdd, 0x75, 0x9d, 0xe5, 0x10, 0xec, 0x55, 0x85, 0x98, 0x41, 0xc4, 0x90, 0x65, 0xfd, 0x3d,
	0x7f, 0xa8, 0xbf, 0xe4, 0x2b, 0x98, 0xaf, 0xfb, 0xd8, 0xda, 0xba, 0x36, 0xa5, 0xb2, 0x26, 0x07,
	0x4b, 0xbd, 0x86, 0xd1, 0xfc, 0x36, 0xde, 0x31, 0xbf, 0xd7, 0x60, 0xf5, 0x40, 0x8b, 0xf7, 0xfb,
	0x13, 0x0b, 0xf4, 0x75, 0x30, 0xe9, 0x6b, 0xa3, 0x0c, 0x79, 0x08, 0x0b, 0x0c, 0x3d, 0xc5, 0xd8,
	0x2e, 0x1f, 0x3d, 0x36, 0x5a, 0xc9, 0x92, 0x1b, 0xd0, 0x88, 0xfb, 0x18, 0xce, 0xc5, 0xc3, 0x35,
	0xdc, 0xef, 0xd3, 0x46, 0xdc, 0x0f, 0x7f, 0x69, 0x02, 0x19, 0xc7, 0xd8, 0x8e, 0x71, 0x83, 0xa6,
	0x7c, 0xdf, 0x17, 0x29, 0x52, 0xe4, 0x3a, 0xcc, 0xb0, 0xc2, 0x3c, 0x47, 0x33, 0xe7, 0xa6, 0x98,
	0xb1, 0x93, 0x92, 0x3a, 0x30, 0x79, 0x08, 0xad, 0x42, 0xf4, 0x38, 0xf6, 0x30, 0xce, 0xf1, 0x4b,
	0x47, 0x1a, 0x0d, 0x14, 0x8a, 0xe1, 0xb8, 0xd9, 0x81, 0x25, 0x3b, 0xe1, 0x87, 0x9a, 0x66, 0x9c,
	0xa6, 0x8f, 0xa7, 0x68, 0xaa, 0x0f, 0x0f, 0xda, 0x8e, 0xeb, 0xa3, 0xa4, 0xbe, 0x92, 0xcc, 0x1e,
	0x79, 0x25, 0xb9, 0x33, 0x5c, 0x17, 0xe7, 0x9c, 0x50, 0x38, 0xc5, 0xba, 0xdf, 0x52, 0xaa, 0x95,
	0xf2, 0x8e, 0x2b, 0x63, 0x9b, 0xfe, 0xce, 0xfc, 0xa1, 0xd2, 0xf8, 0xa1, 0xa8, 0x17, 0x09, 0xff,
	0x0a, 0x60, 0x79, 0x14, 0x46, 0x96, 0xa1, 0x51, 0x3d, 0xd6, 0x0d, 0x11, 0xdb, 0xf2, 0x7b, 0x21,
	0xa4, 0x7f, 0x70, 0xdc, 0x99, 0xdc, 0x86, 0x85, 0x14, 0x1f, 0x47, 0xcc, 0xfd, 0xb9, 0x43, 0xde,
	0x50, 0x5a, 0x09, 0x90, 0xab, 0x30, 0xa3, 0x73, 0x1e, 0x61, 0xaa, 0x57, 0xa7, 0xb8, 0x4b, 0x1d,
	0x90, 0x5c, 0x82, 0x65, 0x1c, 0x8a, 0x3d, 0xdc, 0x5f, 0xcb, 0xc7, 0x69, 0x09, 0xb9, 0xe5, 0xc2,
	0x12, 0x7e, 0x0e, 0xe4, 0x11, 0x37, 0x28, 0xfe, 0x4e, 0x2b, 0x5a, 0xf8, 0x18, 0x4e, 0x8e, 0x88,
	0xe2, 0xea, 0x73, 0x1d, 0x16, 0x30, 0xcd, 0x7e, 0x29, 0xfd, 0xe0, 0x00, 0x6f, 0x69, 0x05, 0xdc,
	0xfa, 0x3d, 0x80, 0x93, 0x0f, 0xed, 0x3f, 0x87, 0x12, 0xa1, 0x9e, 0x95, 0x02, 0xa4, 0x0f, 0x27,
	0x27, 0xac, 0x59, 0xe4, 0xc2, 0x11, 0x96, 0xc1, 0x95, 0x8b, 0xd3, 0x41, 0xa5, 0xbb, 0xe1, 0x31,
	0xf2, 0x18, 0x5a, 0xb5, 0x38, 0xc8, 0x30, 0xb7, 0xe3, 0x89, 0x59, 0x39, 0x3b, 0xf9, 0xd2, 0xeb,
	0xfa, 0xf2, 0xcc, 0x9f, 0x6f, 0xd6, 0x82, 0xbf, 0xdf, 0xac, 0x05, 0xff, 0xbc, 0x59, 0x0b, 0x7e,
	0xfa, 0x6f, 0xed, 0xd8, 0xb7, 0xfe, 0x3f, 0x4f, 0x7f, 0xce, 0xfd, 0x07, 0xba, 0xfe, 0x7f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x63, 0xee, 0x5a, 0xc0, 0x2d, 0x0d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FleetManagerPrivateClient is the client API for FleetManagerPrivate service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConnInterface.NewStream.
type FleetManagerPrivateClient interface {
	UpdateCentralStatus(ctx context.Context, in *UpdateCentralStatusRequest, opts ...grpc.CallOption) (*UpdateCentralStatusResponse, error)
	GetCentrals(ctx context.Context, in *GetCentralsRequest, opts ...grpc.CallOption) (*GetCentralsResponse, error)
}

type fleetManagerPrivateClient struct {
	cc grpc.ClientConnInterface
}

func NewFleetManagerPrivateClient(cc grpc.ClientConnInterface) FleetManagerPrivateClient {
	return &fleetManagerPrivateClient{cc}
}

func (c *fleetManagerPrivateClient) UpdateCentralStatus(ctx context.Context, in *UpdateCentralStatusRequest, opts ...grpc.CallOption) (*UpdateCentralStatusResponse, error) {
	out := new(UpdateCentralStatusResponse)
	err := c.cc.Invoke(ctx, "/private.FleetManagerPrivate/UpdateCentralStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fleetManagerPrivateClient) GetCentrals(ctx context.Context, in *GetCentralsRequest, opts ...grpc.CallOption) (*GetCentralsResponse, error) {
	out := new(GetCentralsResponse)
	err := c.cc.Invoke(ctx, "/private.FleetManagerPrivate/GetCentrals", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FleetManagerPrivateServer is the server API for FleetManagerPrivate service.
type FleetManagerPrivateServer interface {
	UpdateCentralStatus(context.Context, *UpdateCentralStatusRequest) (*UpdateCentralStatusResponse, error)
	GetCentrals(context.Context, *GetCentralsRequest) (*GetCentralsResponse, error)
}

// UnimplementedFleetManagerPrivateServer can be embedded to have forward compatible implementations.
type UnimplementedFleetManagerPrivateServer struct {
}

func (*UnimplementedFleetManagerPrivateServer) UpdateCentralStatus(ctx context.Context, req *UpdateCentralStatusRequest) (*UpdateCentralStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCentralStatus not implemented")
}
func (*UnimplementedFleetManagerPrivateServer) GetCentrals(ctx context.Context, req *GetCentralsRequest) (*GetCentralsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCentrals not implemented")
}

func RegisterFleetManagerPrivateServer(s *grpc.Server, srv FleetManagerPrivateServer) {
	s.RegisterService(&_FleetManagerPrivate_serviceDesc, srv)
}

func _FleetManagerPrivate_UpdateCentralStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCentralStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FleetManagerPrivateServer).UpdateCentralStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/private.FleetManagerPrivate/UpdateCentralStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FleetManagerPrivateServer).UpdateCentralStatus(ctx, req.(*UpdateCentralStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FleetManagerPrivate_GetCentrals_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCentralsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FleetManagerPrivateServer).GetCentrals(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/private.FleetManagerPrivate/GetCentrals",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FleetManagerPrivateServer).GetCentrals(ctx, req.(*GetCentralsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FleetManagerPrivate_serviceDesc = grpc.ServiceDesc{
	ServiceName: "private.FleetManagerPrivate",
	HandlerType: (*FleetManagerPrivateServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateCentralStatus",
			Handler:    _FleetManagerPrivate_UpdateCentralStatus_Handler,
		},
		{
			MethodName: "GetCentrals",
			Handler:    _FleetManagerPrivate_GetCentrals_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "privateapi/fleet-manager-private.proto",
}

func (m *CentralVersions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CentralVersions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CentralVersions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CentralOperator) > 0 {
		i -= len(m.CentralOperator)
		copy(dAtA[i:], m.CentralOperator)
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(m.CentralOperator)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Central) > 0 {
		i -= len(m.Central)
		copy(dAtA[i:], m.Central)
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(m.Central)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Condition) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Condition) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Condition) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.LastTransitionTime) > 0 {
		i -= len(m.LastTransitionTime)
		copy(dAtA[i:], m.LastTransitionTime)
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(m.LastTransitionTime)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Reason) > 0 {
		i -= len(m.Reason)
		copy(dAtA[i:], m.Reason)
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(m.Reason)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Type) > 0 {
		i -= len(m.Type)
		copy(dAtA[i:], m.Type)
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(m.Type)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CentralRoute) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CentralRoute) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CentralRoute) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Router) > 0 {
		i -= len(m.Router)
		copy(dAtA[i:], m.Router)
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(m.Router)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Domain) > 0 {
		i -= len(m.Domain)
		copy(dAtA[i:], m.Domain)
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(m.Domain)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CentralStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CentralStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CentralStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Routes) > 0 {
		for iNdEx := len(m.Routes) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Routes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.Versions != nil {
		{
			size, err := m.Versions.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Conditions) > 0 {
		for iNdEx := len(m.Conditions) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Conditions[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *UpdateCentralStatusRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateCentralStatusRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdateCentralStatusRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Updates) > 0 {
		for k := range m.Updates {
			v := m.Updates[k]
			baseI := i
			if v != nil {
				{
					size, err := v.MarshalToSizedBuffer(dAtA[:i])
					if err != nil {
						return 0, err
					}
					i -= size
					i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(size))
				}
				i--
				dAtA[i] = 0x12
			}
			i -= len(k)
			copy(dAtA[i:], k)
			i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(k)))
			i--
			dAtA[i] = 0xa
			i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.AgentCluster) > 0 {
		i -= len(m.AgentCluster)
		copy(dAtA[i:], m.AgentCluster)
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(m.AgentCluster)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UpdateCentralStatusResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateCentralStatusResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdateCentralStatusResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ManagedCentralMetadataAnnotations) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ManagedCentralMetadataAnnotations) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ManagedCentralMetadataAnnotations) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.MasPlacementId) > 0 {
		i -= len(m.MasPlacementId)
		copy(dAtA[i:], m.MasPlacementId)
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(m.MasPlacementId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.MasId) > 0 {
		i -= len(m.MasId)
		copy(dAtA[i:], m.MasId)
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(m.MasId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ManagedCentralMetadata) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ManagedCentralMetadata) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ManagedCentralMetadata) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.DeletionTimestamp) > 0 {
		i -= len(m.DeletionTimestamp)
		copy(dAtA[i:], m.DeletionTimestamp)
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(m.DeletionTimestamp)))
		i--
		dAtA[i] = 0x22
	}
	if m.Annotations != nil {
		{
			size, err := m.Annotations.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ManagedCentralSpecAuth) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ManagedCentralSpecAuth) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ManagedCentralSpecAuth) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Issuer) > 0 {
		i -= len(m.Issuer)
		copy(dAtA[i:], m.Issuer)
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(m.Issuer)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.OwnerOrgId) > 0 {
		i -= len(m.OwnerOrgId)
		copy(dAtA[i:], m.OwnerOrgId)
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(m.OwnerOrgId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.OwnerUserId) > 0 {
		i -= len(m.OwnerUserId)
		copy(dAtA[i:], m.OwnerUserId)
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(m.OwnerUserId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClientId) > 0 {
		i -= len(m.ClientId)
		copy(dAtA[i:], m.ClientId)
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(m.ClientId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ClientSecret) > 0 {
		i -= len(m.ClientSecret)
		copy(dAtA[i:], m.ClientSecret)
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(m.ClientSecret)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ManagedCentralSpecUiEndpointTLS) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ManagedCentralSpecUiEndpointTLS) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ManagedCentralSpecUiEndpointTLS) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Key) > 0 {
		i -= len(m.Key)
		copy(dAtA[i:], m.Key)
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(m.Key)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Cert) > 0 {
		i -= len(m.Cert)
		copy(dAtA[i:], m.Cert)
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(m.Cert)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ManagedCentralSpecUiEndpoint) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ManagedCentralSpecUiEndpoint) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ManagedCentralSpecUiEndpoint) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Tls != nil {
		{
			size, err := m.Tls.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Host) > 0 {
		i -= len(m.Host)
		copy(dAtA[i:], m.Host)
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(m.Host)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ManagedCentralSpecDataEndpoint) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ManagedCentralSpecDataEndpoint) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ManagedCentralSpecDataEndpoint) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Host) > 0 {
		i -= len(m.Host)
		copy(dAtA[i:], m.Host)
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(m.Host)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ResourceList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ResourceList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ResourceList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Memory) > 0 {
		i -= len(m.Memory)
		copy(dAtA[i:], m.Memory)
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(m.Memory)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Cpu) > 0 {
		i -= len(m.Cpu)
		copy(dAtA[i:], m.Cpu)
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(m.Cpu)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ResourceRequirements) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ResourceRequirements) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ResourceRequirements) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limits != nil {
		{
			size, err := m.Limits.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Requests != nil {
		{
			size, err := m.Requests.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ManagedCentralSpecCentral) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ManagedCentralSpecCentral) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ManagedCentralSpecCentral) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Resources != nil {
		{
			size, err := m.Resources.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ManagedCentralSpecScannerAnalyzerScaling) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ManagedCentralSpecScannerAnalyzerScaling) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ManagedCentralSpecScannerAnalyzerScaling) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MaxReplicas != 0 {
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(m.MaxReplicas))
		i--
		dAtA[i] = 0x20
	}
	if m.MinReplicas != 0 {
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(m.MinReplicas))
		i--
		dAtA[i] = 0x18
	}
	if m.Replicas != 0 {
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(m.Replicas))
		i--
		dAtA[i] = 0x10
	}
	if len(m.AutoScaling) > 0 {
		i -= len(m.AutoScaling)
		copy(dAtA[i:], m.AutoScaling)
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(m.AutoScaling)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ManagedCentralSpecScannerAnalyzer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ManagedCentralSpecScannerAnalyzer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ManagedCentralSpecScannerAnalyzer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Resources != nil {
		{
			size, err := m.Resources.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Scaling != nil {
		{
			size, err := m.Scaling.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ManagedCentralSpecScannerDb) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ManagedCentralSpecScannerDb) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ManagedCentralSpecScannerDb) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Host) > 0 {
		i -= len(m.Host)
		copy(dAtA[i:], m.Host)
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(m.Host)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ManagedCentralSpecScanner) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ManagedCentralSpecScanner) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ManagedCentralSpecScanner) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Db != nil {
		{
			size, err := m.Db.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Analyzer != nil {
		{
			size, err := m.Analyzer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ManagedCentralSpec) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ManagedCentralSpec) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ManagedCentralSpec) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Scanner != nil {
		{
			size, err := m.Scanner.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.Central != nil {
		{
			size, err := m.Central.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Versions != nil {
		{
			size, err := m.Versions.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.DataEndpoint != nil {
		{
			size, err := m.DataEndpoint.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.UiEndpoint != nil {
		{
			size, err := m.UiEndpoint.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Auth != nil {
		{
			size, err := m.Auth.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Owners) > 0 {
		for iNdEx := len(m.Owners) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Owners[iNdEx])
			copy(dAtA[i:], m.Owners[iNdEx])
			i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(m.Owners[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ManagedCentral) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ManagedCentral) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ManagedCentral) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.RequestStatus) > 0 {
		i -= len(m.RequestStatus)
		copy(dAtA[i:], m.RequestStatus)
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(m.RequestStatus)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Spec != nil {
		{
			size, err := m.Spec.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Metadata != nil {
		{
			size, err := m.Metadata.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Kind) > 0 {
		i -= len(m.Kind)
		copy(dAtA[i:], m.Kind)
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(m.Kind)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetCentralsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetCentralsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetCentralsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.AgentCluster) > 0 {
		i -= len(m.AgentCluster)
		copy(dAtA[i:], m.AgentCluster)
		i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(len(m.AgentCluster)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetCentralsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetCentralsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetCentralsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Centrals) > 0 {
		for iNdEx := len(m.Centrals) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Centrals[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintFleetManagerPrivate(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintFleetManagerPrivate(dAtA []byte, offset int, v uint64) int {
	offset -= sovFleetManagerPrivate(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *CentralVersions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Central)
	if l > 0 {
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	l = len(m.CentralOperator)
	if l > 0 {
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Condition) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Type)
	if l > 0 {
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	l = len(m.Reason)
	if l > 0 {
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	l = len(m.LastTransitionTime)
	if l > 0 {
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CentralRoute) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Domain)
	if l > 0 {
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	l = len(m.Router)
	if l > 0 {
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CentralStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Conditions) > 0 {
		for _, e := range m.Conditions {
			l = e.Size()
			n += 1 + l + sovFleetManagerPrivate(uint64(l))
		}
	}
	if m.Versions != nil {
		l = m.Versions.Size()
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	if len(m.Routes) > 0 {
		for _, e := range m.Routes {
			l = e.Size()
			n += 1 + l + sovFleetManagerPrivate(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpdateCentralStatusRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AgentCluster)
	if l > 0 {
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	if len(m.Updates) > 0 {
		for k, v := range m.Updates {
			_ = k
			_ = v
			l = 0
			if v != nil {
				l = v.Size()
				l += 1 + sovFleetManagerPrivate(uint64(l))
			}
			mapEntrySize := 1 + len(k) + sovFleetManagerPrivate(uint64(len(k))) + l
			n += mapEntrySize + 1 + sovFleetManagerPrivate(uint64(mapEntrySize))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpdateCentralStatusResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ManagedCentralMetadataAnnotations) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MasId)
	if l > 0 {
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	l = len(m.MasPlacementId)
	if l > 0 {
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ManagedCentralMetadata) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	if m.Annotations != nil {
		l = m.Annotations.Size()
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	l = len(m.DeletionTimestamp)
	if l > 0 {
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ManagedCentralSpecAuth) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ClientSecret)
	if l > 0 {
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	l = len(m.ClientId)
	if l > 0 {
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	l = len(m.OwnerUserId)
	if l > 0 {
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	l = len(m.OwnerOrgId)
	if l > 0 {
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	l = len(m.Issuer)
	if l > 0 {
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ManagedCentralSpecUiEndpointTLS) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Cert)
	if l > 0 {
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	l = len(m.Key)
	if l > 0 {
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ManagedCentralSpecUiEndpoint) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Host)
	if l > 0 {
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	if m.Tls != nil {
		l = m.Tls.Size()
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ManagedCentralSpecDataEndpoint) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Host)
	if l > 0 {
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ResourceList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Cpu)
	if l > 0 {
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	l = len(m.Memory)
	if l > 0 {
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ResourceRequirements) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Requests != nil {
		l = m.Requests.Size()
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	if m.Limits != nil {
		l = m.Limits.Size()
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ManagedCentralSpecCentral) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Resources != nil {
		l = m.Resources.Size()
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ManagedCentralSpecScannerAnalyzerScaling) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AutoScaling)
	if l > 0 {
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	if m.Replicas != 0 {
		n += 1 + sovFleetManagerPrivate(uint64(m.Replicas))
	}
	if m.MinReplicas != 0 {
		n += 1 + sovFleetManagerPrivate(uint64(m.MinReplicas))
	}
	if m.MaxReplicas != 0 {
		n += 1 + sovFleetManagerPrivate(uint64(m.MaxReplicas))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ManagedCentralSpecScannerAnalyzer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Scaling != nil {
		l = m.Scaling.Size()
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	if m.Resources != nil {
		l = m.Resources.Size()
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ManagedCentralSpecScannerDb) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Host)
	if l > 0 {
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ManagedCentralSpecScanner) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Analyzer != nil {
		l = m.Analyzer.Size()
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	if m.Db != nil {
		l = m.Db.Size()
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ManagedCentralSpec) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Owners) > 0 {
		for _, s := range m.Owners {
			l = len(s)
			n += 1 + l + sovFleetManagerPrivate(uint64(l))
		}
	}
	if m.Auth != nil {
		l = m.Auth.Size()
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	if m.UiEndpoint != nil {
		l = m.UiEndpoint.Size()
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	if m.DataEndpoint != nil {
		l = m.DataEndpoint.Size()
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	if m.Versions != nil {
		l = m.Versions.Size()
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	if m.Central != nil {
		l = m.Central.Size()
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	if m.Scanner != nil {
		l = m.Scanner.Size()
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ManagedCentral) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	l = len(m.Kind)
	if l > 0 {
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	if m.Metadata != nil {
		l = m.Metadata.Size()
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	if m.Spec != nil {
		l = m.Spec.Size()
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	l = len(m.RequestStatus)
	if l > 0 {
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetCentralsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AgentCluster)
	if l > 0 {
		n += 1 + l + sovFleetManagerPrivate(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetCentralsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Centrals) > 0 {
		for _, e := range m.Centrals {
			l = e.Size()
			n += 1 + l + sovFleetManagerPrivate(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovFleetManagerPrivate(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozFleetManagerPrivate(x uint64) (n int) {
	return sovFleetManagerPrivate(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *CentralVersions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFleetManagerPrivate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CentralVersions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CentralVersions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Central", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Central = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CentralOperator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CentralOperator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFleetManagerPrivate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Condition) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFleetManagerPrivate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Condition: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Condition: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reason = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastTransitionTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastTransitionTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFleetManagerPrivate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CentralRoute) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFleetManagerPrivate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CentralRoute: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CentralRoute: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Domain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Domain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Router", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Router = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFleetManagerPrivate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CentralStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFleetManagerPrivate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CentralStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CentralStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Conditions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Conditions = append(m.Conditions, &Condition{})
			if err := m.Conditions[len(m.Conditions)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Versions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Versions == nil {
				m.Versions = &CentralVersions{}
			}
			if err := m.Versions.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Routes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Routes = append(m.Routes, &CentralRoute{})
			if err := m.Routes[len(m.Routes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFleetManagerPrivate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateCentralStatusRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFleetManagerPrivate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateCentralStatusRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateCentralStatusRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgentCluster", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgentCluster = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Updates", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Updates == nil {
				m.Updates = make(map[string]*CentralStatus)
			}
			var mapkey string
			var mapvalue *CentralStatus
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowFleetManagerPrivate
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					var stringLenmapkey uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowFleetManagerPrivate
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapkey |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapkey := int(stringLenmapkey)
					if intStringLenmapkey < 0 {
						return ErrInvalidLengthFleetManagerPrivate
					}
					postStringIndexmapkey := iNdEx + intStringLenmapkey
					if postStringIndexmapkey < 0 {
						return ErrInvalidLengthFleetManagerPrivate
					}
					if postStringIndexmapkey > l {
						return io.ErrUnexpectedEOF
					}
					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
					iNdEx = postStringIndexmapkey
				} else if fieldNum == 2 {
					var mapmsglen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowFleetManagerPrivate
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapmsglen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if mapmsglen < 0 {
						return ErrInvalidLengthFleetManagerPrivate
					}
					postmsgIndex := iNdEx + mapmsglen
					if postmsgIndex < 0 {
						return ErrInvalidLengthFleetManagerPrivate
					}
					if postmsgIndex > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = &CentralStatus{}
					if err := mapvalue.Unmarshal(dAtA[iNdEx:postmsgIndex]); err != nil {
						return err
					}
					iNdEx = postmsgIndex
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipFleetManagerPrivate(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthFleetManagerPrivate
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Updates[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFleetManagerPrivate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateCentralStatusResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFleetManagerPrivate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateCentralStatusResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateCentralStatusResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFleetManagerPrivate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ManagedCentralMetadataAnnotations) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFleetManagerPrivate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ManagedCentralMetadataAnnotations: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ManagedCentralMetadataAnnotations: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MasId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MasId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MasPlacementId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MasPlacementId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFleetManagerPrivate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ManagedCentralMetadata) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFleetManagerPrivate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ManagedCentralMetadata: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ManagedCentralMetadata: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Annotations", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Annotations == nil {
				m.Annotations = &ManagedCentralMetadataAnnotations{}
			}
			if err := m.Annotations.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeletionTimestamp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeletionTimestamp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFleetManagerPrivate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ManagedCentralSpecAuth) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFleetManagerPrivate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ManagedCentralSpecAuth: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ManagedCentralSpecAuth: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientSecret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientSecret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerUserId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerUserId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerOrgId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerOrgId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Issuer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Issuer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFleetManagerPrivate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ManagedCentralSpecUiEndpointTLS) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFleetManagerPrivate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ManagedCentralSpecUiEndpointTLS: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ManagedCentralSpecUiEndpointTLS: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cert", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cert = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Key = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFleetManagerPrivate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ManagedCentralSpecUiEndpoint) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFleetManagerPrivate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ManagedCentralSpecUiEndpoint: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ManagedCentralSpecUiEndpoint: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Host", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Host = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tls", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Tls == nil {
				m.Tls = &ManagedCentralSpecUiEndpointTLS{}
			}
			if err := m.Tls.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFleetManagerPrivate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ManagedCentralSpecDataEndpoint) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFleetManagerPrivate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ManagedCentralSpecDataEndpoint: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ManagedCentralSpecDataEndpoint: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Host", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Host = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFleetManagerPrivate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ResourceList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFleetManagerPrivate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ResourceList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ResourceList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cpu", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cpu = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Memory", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Memory = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFleetManagerPrivate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ResourceRequirements) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFleetManagerPrivate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ResourceRequirements: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ResourceRequirements: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Requests", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Requests == nil {
				m.Requests = &ResourceList{}
			}
			if err := m.Requests.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limits", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Limits == nil {
				m.Limits = &ResourceList{}
			}
			if err := m.Limits.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFleetManagerPrivate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ManagedCentralSpecCentral) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFleetManagerPrivate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ManagedCentralSpecCentral: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ManagedCentralSpecCentral: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Resources", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Resources == nil {
				m.Resources = &ResourceRequirements{}
			}
			if err := m.Resources.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFleetManagerPrivate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ManagedCentralSpecScannerAnalyzerScaling) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFleetManagerPrivate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ManagedCentralSpecScannerAnalyzerScaling: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ManagedCentralSpecScannerAnalyzerScaling: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AutoScaling", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AutoScaling = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Replicas", wireType)
			}
			m.Replicas = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Replicas |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinReplicas", wireType)
			}
			m.MinReplicas = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinReplicas |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxReplicas", wireType)
			}
			m.MaxReplicas = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxReplicas |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipFleetManagerPrivate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ManagedCentralSpecScannerAnalyzer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFleetManagerPrivate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ManagedCentralSpecScannerAnalyzer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ManagedCentralSpecScannerAnalyzer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Scaling", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Scaling == nil {
				m.Scaling = &ManagedCentralSpecScannerAnalyzerScaling{}
			}
			if err := m.Scaling.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Resources", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Resources == nil {
				m.Resources = &ResourceRequirements{}
			}
			if err := m.Resources.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFleetManagerPrivate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ManagedCentralSpecScannerDb) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFleetManagerPrivate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ManagedCentralSpecScannerDb: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ManagedCentralSpecScannerDb: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Host", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Host = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFleetManagerPrivate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ManagedCentralSpecScanner) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFleetManagerPrivate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ManagedCentralSpecScanner: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ManagedCentralSpecScanner: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Analyzer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Analyzer == nil {
				m.Analyzer = &ManagedCentralSpecScannerAnalyzer{}
			}
			if err := m.Analyzer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Db", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Db == nil {
				m.Db = &ManagedCentralSpecScannerDb{}
			}
			if err := m.Db.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFleetManagerPrivate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ManagedCentralSpec) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFleetManagerPrivate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ManagedCentralSpec: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ManagedCentralSpec: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owners", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owners = append(m.Owners, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Auth", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Auth == nil {
				m.Auth = &ManagedCentralSpecAuth{}
			}
			if err := m.Auth.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UiEndpoint", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UiEndpoint == nil {
				m.UiEndpoint = &ManagedCentralSpecUiEndpoint{}
			}
			if err := m.UiEndpoint.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DataEndpoint", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DataEndpoint == nil {
				m.DataEndpoint = &ManagedCentralSpecDataEndpoint{}
			}
			if err := m.DataEndpoint.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Versions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Versions == nil {
				m.Versions = &CentralVersions{}
			}
			if err := m.Versions.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Central", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Central == nil {
				m.Central = &ManagedCentralSpecCentral{}
			}
			if err := m.Central.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Scanner", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Scanner == nil {
				m.Scanner = &ManagedCentralSpecScanner{}
			}
			if err := m.Scanner.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFleetManagerPrivate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ManagedCentral) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFleetManagerPrivate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ManagedCentral: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ManagedCentral: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Kind", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Kind = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Metadata == nil {
				m.Metadata = &ManagedCentralMetadata{}
			}
			if err := m.Metadata.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Spec", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Spec == nil {
				m.Spec = &ManagedCentralSpec{}
			}
			if err := m.Spec.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestStatus = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFleetManagerPrivate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetCentralsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFleetManagerPrivate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetCentralsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetCentralsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgentCluster", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgentCluster = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFleetManagerPrivate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetCentralsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFleetManagerPrivate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetCentralsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetCentralsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Centrals", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Centrals = append(m.Centrals, &ManagedCentral{})
			if err := m.Centrals[len(m.Centrals)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFleetManagerPrivate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFleetManagerPrivate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipFleetManagerPrivate(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowFleetManagerPrivate
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowFleetManagerPrivate
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthFleetManagerPrivate
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupFleetManagerPrivate
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthFleetManagerPrivate
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthFleetManagerPrivate        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowFleetManagerPrivate          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupFleetManagerPrivate = fmt.Errorf("proto: unexpected end of group")
)
